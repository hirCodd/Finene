import{_ as n,W as s,X as a,a1 as t}from"./framework-b468b75a.js";const p={},e=t(`<h2 id="_1-前言" tabindex="-1"><a class="header-anchor" href="#_1-前言" aria-hidden="true">#</a> 1.前言</h2><p>Apache ShenYu是一款支持多语言、多协议(Dubbo,SpringCloud,gRPC,Motan,Sofa,Tars, BRPC)、插件化设计、高度可动态化配置、高度可自主化开发的Java网关。内置丰富的插件支持，鉴权，限流，熔断，防火墙等等。流量配置动态化，性能极高。支持集群部署，支持 A/B Test，蓝绿发布等功能。</p><p>Apache ShenYu的匹配缓存主要由3级缓存构成，第一级缓存是由Caffeine实现的本地缓存，第二级缓存是由Caffeine与ConcurrentHashMap实现的前缀树缓存，第三级缓存是由ConcurrentHashMap构成的全局缓存。其中一级缓存和二级缓存都是需要配置开启的，三级缓存是默认使用的。</p><h2 id="_2-总体思路" tabindex="-1"><a class="header-anchor" href="#_2-总体思路" aria-hidden="true">#</a> 2.总体思路</h2><p>在所有缓存都开启的前提下，如果一级缓存没有命中，那么会从前缀树缓存进行匹配，如果前缀树缓存也没有命中，那么会默认的缓存中进行匹配，如果默认的缓存没有匹配成功，则说明匹配失效。</p><h2 id="_3-一级缓存" tabindex="-1"><a class="header-anchor" href="#_3-一级缓存" aria-hidden="true">#</a> 3.一级缓存</h2><h3 id="_3-1-一级缓存的设计" tabindex="-1"><a class="header-anchor" href="#_3-1-一级缓存的设计" aria-hidden="true">#</a> 3.1 一级缓存的设计</h3><p>shenyu为selector和rule都设计了一级缓存，一级使用ConcurrentHashMap实现，key为pluginName，value是基于Caffeine实现的WindowTinyLFUMap。 当一级缓存是selector缓存时，value为Map&lt;String, SelectorData&gt;，其中lfuMap的key是path，value为SelectorData。 当一级缓存是rule缓存时，value为Map&lt;String, RuleData&gt;，其中lfuMap的key是path，value为RuleData。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * pluginName -&gt; LRUMap.
     * LRUMap: path -&gt; selector data.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">SelectorData</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token constant">SELECTOR_DATA_MAP</span> <span class="token operator">=</span> <span class="token class-name">Maps</span><span class="token punctuation">.</span><span class="token function">newConcurrentMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token doc-comment comment">/**
     * plugin name -&gt; LRU Map.
     * LRU Map: path -&gt; rule data.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">RuleData</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token constant">RULE_DATA_MAP</span> <span class="token operator">=</span> <span class="token class-name">Maps</span><span class="token punctuation">.</span><span class="token function">newConcurrentMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-何时存入数据" tabindex="-1"><a class="header-anchor" href="#_3-2-何时存入数据" aria-hidden="true">#</a> 3.2 何时存入数据</h3><ul><li>1.当二级缓存或者三级缓存(默认缓存)命中的时候，会将<code>&lt;pluginName, &lt;&lt;path, Rule/Selector&gt;&gt;</code>数据存入一级缓存中。</li><li>2.当默认缓存没有命中的时候，也会将数据存入一级缓存中，存储的数据Rule或者Selector为只有pluginName字段，表示当前数据不可能命中(不可能被访问)。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractShenyuPlugin</span> <span class="token keyword">implements</span> <span class="token class-name">ShenyuPlugin</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * cache rule data.
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">path</span> current uri path
     * <span class="token keyword">@param</span> <span class="token parameter">ruleData</span> rule data
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">cacheRuleData</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> path<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">RuleData</span> ruleData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// if the ruleCache is disabled or rule data is null, not cache rule data.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">FALSE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ruleMatchConfig<span class="token punctuation">.</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">)</span>
                <span class="token operator">||</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">.</span><span class="token function">getMatchRestful</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> initialCapacity <span class="token operator">=</span> ruleMatchConfig<span class="token punctuation">.</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInitialCapacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> maximumSize <span class="token operator">=</span> ruleMatchConfig<span class="token punctuation">.</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMaximumSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 将空数据存入缓存中，表示当前数据不可能命中(不可能被访问)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cacheRuleData</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> ruleData<span class="token punctuation">,</span> initialCapacity<span class="token punctuation">,</span> maximumSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConditionData</span><span class="token punctuation">&gt;</span></span> conditionList <span class="token operator">=</span> ruleData<span class="token punctuation">.</span><span class="token function">getConditionDataList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>conditionList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果所有的条件都是uri条件，那么将数据存入缓存中</span>
            <span class="token keyword">boolean</span> isUriCondition <span class="token operator">=</span> conditionList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">allMatch</span><span class="token punctuation">(</span>v <span class="token operator">-&gt;</span> <span class="token constant">URI_CONDITION_TYPE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">getParamType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isUriCondition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cacheRuleData</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> ruleData<span class="token punctuation">,</span> initialCapacity<span class="token punctuation">,</span> maximumSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token class-name">RuleData</span> <span class="token function">trieMatchRule</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SelectorData</span> selectorData<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ruleMatchConfig<span class="token punctuation">.</span><span class="token function">getTrie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">RuleData</span> ruleData <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ShenyuTrieNode</span> shenyuTrieNode <span class="token operator">=</span> ruleTrie<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> selectorData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">nonNull</span><span class="token punctuation">(</span>shenyuTrieNode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">LogUtils</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token constant">LOG</span><span class="token punctuation">,</span> <span class="token string">&quot;{} rule match path from shenyu trie&quot;</span><span class="token punctuation">,</span> <span class="token function">named</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> shenyuTrieNode<span class="token punctuation">.</span><span class="token function">getPathCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>collection<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">,</span> <span class="token class-name">RuleData</span><span class="token punctuation">&gt;</span></span> ruleDataPair<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>collection<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    ruleDataPair <span class="token operator">=</span> <span class="token function">matchRule</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span> <span class="token class-name">ListUtil</span><span class="token punctuation">.</span><span class="token function">castList</span><span class="token punctuation">(</span>collection<span class="token punctuation">,</span> <span class="token class-name">RuleData</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token operator">::</span><span class="token function">cast</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Object</span> ruleObj <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">RuleData</span> rule <span class="token operator">=</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">nonNull</span><span class="token punctuation">(</span>ruleObj<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token class-name">RuleData</span><span class="token punctuation">)</span> ruleObj <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token keyword">boolean</span> cached <span class="token operator">=</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">nonNull</span><span class="token punctuation">(</span>rule<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> rule<span class="token punctuation">.</span><span class="token function">getConditionDataList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">allMatch</span><span class="token punctuation">(</span>condition <span class="token operator">-&gt;</span> <span class="token constant">URI_CONDITION_TYPE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>condition<span class="token punctuation">.</span><span class="token function">getParamType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    ruleDataPair <span class="token operator">=</span> <span class="token class-name">Pair</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>cached<span class="token punctuation">,</span> rule<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                ruleData <span class="token operator">=</span> ruleDataPair<span class="token punctuation">.</span><span class="token function">getRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ruleDataPair<span class="token punctuation">.</span><span class="token function">getLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">nonNull</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// exist only one rule data, cache rule</span>
                    <span class="token function">cacheRuleData</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> ruleData<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> ruleData<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token class-name">RuleData</span> <span class="token function">defaultMatchRule</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RuleData</span><span class="token punctuation">&gt;</span></span> rules<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">,</span> <span class="token class-name">RuleData</span><span class="token punctuation">&gt;</span></span> matchRulePair <span class="token operator">=</span> <span class="token function">matchRule</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span> rules<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RuleData</span> ruleData <span class="token operator">=</span> matchRulePair<span class="token punctuation">.</span><span class="token function">getRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 如果匹配成功则表示，当前的路径情况下可以匹配成功</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">nonNull</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token constant">LOG</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;{} rule match path from default strategy&quot;</span><span class="token punctuation">,</span> <span class="token function">named</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// cache rule data</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>matchRulePair<span class="token punctuation">.</span><span class="token function">getLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">cacheRuleData</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> ruleData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> ruleData<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// if not match rule, cache empty rule data.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>matchRulePair<span class="token punctuation">.</span><span class="token function">getLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 如果没有匹配成功，那么将空数据存入缓存中，表示当前数据不可能命中(不可能被访问)</span>
                <span class="token class-name">RuleData</span> emptyRuleData <span class="token operator">=</span> <span class="token class-name">RuleData</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pluginName</span><span class="token punctuation">(</span><span class="token function">named</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">cacheRuleData</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> emptyRuleData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-何时匹配数据" tabindex="-1"><a class="header-anchor" href="#_3-3-何时匹配数据" aria-hidden="true">#</a> 3.3 何时匹配数据</h3><p>在一级缓存开启的前提下，只有继承了<code>org.apache.shenyu.plugin.base.AbstractShenyuPlugin</code>类的插件才会访问一级缓存。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractShenyuPlugin</span> <span class="token keyword">implements</span> <span class="token class-name">ShenyuPlugin</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">ShenyuPluginChain</span> chain<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 省略部分代码</span>
        <span class="token class-name">SelectorData</span> selectorData <span class="token operator">=</span> <span class="token function">obtainSelectorDataCacheIfEnabled</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// ...</span>
        <span class="token comment">// 如果不能匹配命中，则从trie缓存中匹配</span>
        <span class="token class-name">RuleData</span> ruleData <span class="token operator">=</span> <span class="token function">obtainRuleDataCacheIfEnabled</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token class-name">SelectorData</span> <span class="token function">obtainSelectorDataCacheIfEnabled</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> selectorMatchConfig<span class="token punctuation">.</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">obtainSelectorData</span><span class="token punctuation">(</span><span class="token function">named</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token class-name">RuleData</span> <span class="token function">obtainRuleDataCacheIfEnabled</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> ruleMatchConfig<span class="token punctuation">.</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">obtainRuleData</span><span class="token punctuation">(</span><span class="token function">named</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">MatchDataCache</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">SelectorData</span> <span class="token function">obtainSelectorData</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> pluginName<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">SelectorData</span><span class="token punctuation">&gt;</span></span> lruMap <span class="token operator">=</span> <span class="token constant">SELECTOR_DATA_MAP</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>pluginName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>lruMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token class-name">Maps</span><span class="token punctuation">.</span><span class="token function">newHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-何时删除数据" tabindex="-1"><a class="header-anchor" href="#_3-4-何时删除数据" aria-hidden="true">#</a> 3.4 何时删除数据</h3><ul><li>1.当更新当前插件的时候，会将当前插件相关的selector缓存或者rule缓存删除</li></ul><p>如果是更新插件的任意一个选项，如果插件开启的前提下，shenyu将会根据pluginName删除当前插件相关的selector缓存和rule缓存,核心的代码如下： <code>MatchDataCache.getInstance().removeSelectorData(pluginName);</code>, <code>MatchDataCache.getInstance().removeRuleData(pluginName);</code></p><ul><li>2.当更新当前selector或者rule的时候，shenyu会将当前selector或者rule相关的数据删除</li></ul><p>当更新selector的时候，shenyu会根据插件名称和selectorId删除当前selector相关的缓存数据，同时也会删除空的selector缓存数据。 在更新selector的同时，shenyu同时也会删除当前selector相关的rule缓存，同时也会删除空的rule缓存数据。</p><p>当更新rule的时候，shenyu会根据插件名称和ruleId删除当前rule相关的缓存数据，同时也会删除空的rule缓存数据。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonPluginDataSubscriber</span> <span class="token keyword">implements</span> <span class="token class-name">PluginDataSubscriber</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">updateCacheData</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token keyword">final</span> <span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">PluginData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">PluginData</span> pluginData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">PluginData</span><span class="token punctuation">)</span> data<span class="token punctuation">;</span>
            <span class="token comment">// ...... 省略部分代码</span>
            <span class="token keyword">final</span> <span class="token class-name">String</span> pluginName <span class="token operator">=</span> pluginData<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 如果是更新插件，那么会将当前插件相关的selector缓存和rule缓存删除，并且是根据pluginName进行删除的。</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>selectorMatchConfig<span class="token punctuation">.</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeSelectorData</span><span class="token punctuation">(</span>pluginName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ruleMatchCacheConfig<span class="token punctuation">.</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeRuleData</span><span class="token punctuation">(</span>pluginName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">SelectorData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">SelectorData</span> selectorData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SelectorData</span><span class="token punctuation">)</span> data<span class="token punctuation">;</span>
            <span class="token comment">// 如果是更新更新selector的话，首先会将当前selector相关的缓存删除，同时也会删除空SelectorData的数据</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>selectorMatchConfig<span class="token punctuation">.</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeSelectorData</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">.</span><span class="token function">getPluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> selectorData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeEmptySelectorData</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">.</span><span class="token function">getPluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 同时删除当前selector相关的rule缓存，同时也会删除空的rule缓存数据</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ruleMatchCacheConfig<span class="token punctuation">.</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeRuleDataBySelector</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">.</span><span class="token function">getPluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> selectorData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeEmptyRuleData</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">.</span><span class="token function">getPluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">updateSelectorTrieCache</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">RuleData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">RuleData</span> ruleData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RuleData</span><span class="token punctuation">)</span> data<span class="token punctuation">;</span>
            <span class="token comment">// 如果是更新更新rule的话，首先会将当前rule相关的缓存删除，同时也会删除空RuleData的数据</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ruleMatchCacheConfig<span class="token punctuation">.</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeRuleData</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">.</span><span class="token function">getPluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ruleData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeEmptyRuleData</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">.</span><span class="token function">getPluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">updateRuleTrieCache</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>3.当删除当前selector或者rule的时候，shenyu会将当前selector或者rule相关的数据删除</li></ul><p>当删除当前selector的时候会将当前selector相关的缓存数据删除，同时也会删除空的selector缓存数据。</p><p>当删除当前rule的时候会将当前rule相关的缓存数据删除，同时也会删除空的rule缓存数据。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonPluginDataSubscriber</span> <span class="token keyword">implements</span> <span class="token class-name">PluginDataSubscriber</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">removeCacheData</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token keyword">final</span> <span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">PluginData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">SelectorData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">SelectorData</span> selectorData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SelectorData</span><span class="token punctuation">)</span> data<span class="token punctuation">;</span>
            <span class="token comment">// remove selector match cache</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>selectorMatchConfig<span class="token punctuation">.</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeSelectorData</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">.</span><span class="token function">getPluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> selectorData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeEmptySelectorData</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">.</span><span class="token function">getPluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">RuleData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">RuleData</span> ruleData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RuleData</span><span class="token punctuation">)</span> data<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ruleMatchCacheConfig<span class="token punctuation">.</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeRuleData</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">.</span><span class="token function">getPluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ruleData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">MatchDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeEmptyRuleData</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">.</span><span class="token function">getPluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-何时使用一级缓存" tabindex="-1"><a class="header-anchor" href="#_3-5-何时使用一级缓存" aria-hidden="true">#</a> 3.5 何时使用一级缓存</h3><ul><li>shenyu的一级缓存只有在rule condition中只有uri match的时候才会使用，其他的情况都不会将数据缓存到一级缓存。</li><li>如果在同一个selector中有多个相同uri condition的rule，那么就不要开启一级缓存。</li><li>当rule或者selector中matchRestful为true的时候(表示匹配restful风格的数据，这样能够节省内存)，shenyu不会将数据缓存到一级缓存中。</li></ul><h2 id="_4-二级缓存匹配" tabindex="-1"><a class="header-anchor" href="#_4-二级缓存匹配" aria-hidden="true">#</a> 4.二级缓存匹配</h2><h3 id="_4-1-二级缓存的设计" tabindex="-1"><a class="header-anchor" href="#_4-1-二级缓存的设计" aria-hidden="true">#</a> 4.1 二级缓存的设计</h3><p>shenyu的二级缓存是基于Caffeine实现的WindowLFUMap实现的前缀树缓存。shenyu的前缀树主要包含了由caffeine实现的keyRootMap和匹配模式。</p><ul><li>shenyu的前缀树支持两种匹配模式，一种是antPathMatch，一种是pathPattern。antPathMatch支持路径中待通配符访问，包括支持<code>*</code>，<code>**</code>，<code>*.json</code>格式通配符。</li><li>shenyu的前缀树的keyRootMap是一个Map&lt;String, ShenyuTrieNode&gt;，当前缀树是selector前缀树的时候，keyRootMap的key是pluginName，value是ShenyuTrieNode， 当前缀树是rule前缀树的时候，keyRootMap的key是selectorId，value是ShenyuTrieNode。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShenyuTrie</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * when the trie is selector trie, the key is pluginName, when the trie is rule trie, the key is selectorId.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ShenyuTrieNode</span><span class="token punctuation">&gt;</span></span> keyRootMap<span class="token punctuation">;</span>
    
    <span class="token doc-comment comment">/**
     * the mode includes antPathMatch and pathPattern
     * antPathMatch means all full match, pathPattern is used in web.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">TrieMatchModeEnum</span> matchMode<span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token class-name">ShenyuTrie</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Long</span> cacheSize<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> matchMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>matchMode <span class="token operator">=</span> <span class="token class-name">TrieMatchModeEnum</span><span class="token punctuation">.</span><span class="token function">acquireTrieMatch</span><span class="token punctuation">(</span>matchMode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>keyRootMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WindowTinyLFUMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>cacheSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>ShenyuTrieNode的数据结构设计如下：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShenyuTrieNode</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2347426887850566364L</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * abc match abc, :a match all words as a variable names a, * match all words  ,** match all words and children.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> matchStr<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * full path.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> fullPath<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * in path /a/b/c, b is child of a, c is child of b.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ShenyuTrieNode</span><span class="token punctuation">&gt;</span></span> children<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * path variables.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ShenyuTrieNode</span><span class="token punctuation">&gt;</span></span> pathVariables<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * path variable node.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">ShenyuTrieNode</span> pathVariableNode<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * isWildcard, match all nodes, /a/b/**  /** is a match all Node.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> isWildcard<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * if true means a real path exists, /a/b/c/d only node of d is true, a,b,c is false.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> endOfPath<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * selectorId mapping to RuleData.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> pathCache<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * biz info, if the trie is selector trie, the bizInfo is pluginName, if the trie is rule trie, the bizInfo is selectorId.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> bizInfo<span class="token punctuation">;</span>
    
    <span class="token doc-comment comment">/**
     * parent node.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">ShenyuTrieNode</span> parentNode<span class="token punctuation">;</span>
    
    <span class="token doc-comment comment">/**
     * fail to node.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">ShenyuTrieNode</span> failToNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-何时存入数据" tabindex="-1"><a class="header-anchor" href="#_4-2-何时存入数据" aria-hidden="true">#</a> 4.2 何时存入数据</h3><blockquote><p>在前缀树缓存开启的前提下，只有通过shenyu-admin或者本地模式添加selector或者rule数据并且是包含了uri匹配的规则时会将ruledata或者selectordata相关的数据存入对应的RuleTri或者SelectorTrie中。</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonPluginDataSubscriber</span> <span class="token keyword">implements</span> <span class="token class-name">PluginDataSubscriber</span> <span class="token punctuation">{</span>    
	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">updateSelectorTrieCache</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">SelectorData</span> selectorData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>selectorMatchConfig<span class="token punctuation">.</span><span class="token function">getTrie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">.</span><span class="token function">getBeforeConditionList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TrieEvent</span><span class="token punctuation">(</span><span class="token class-name">TrieEventEnum</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">,</span> <span class="token class-name">TrieCacheTypeEnum</span><span class="token punctuation">.</span><span class="token constant">SELECTOR</span><span class="token punctuation">,</span> selectorData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// if selector data has before condition, update trie</span>
                eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TrieEvent</span><span class="token punctuation">(</span><span class="token class-name">TrieEventEnum</span><span class="token punctuation">.</span><span class="token constant">UPDATE</span><span class="token punctuation">,</span> <span class="token class-name">TrieCacheTypeEnum</span><span class="token punctuation">.</span><span class="token constant">SELECTOR</span><span class="token punctuation">,</span> selectorData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TrieEvent</span><span class="token punctuation">(</span><span class="token class-name">TrieEventEnum</span><span class="token punctuation">.</span><span class="token constant">REMOVE</span><span class="token punctuation">,</span> <span class="token class-name">TrieCacheTypeEnum</span><span class="token punctuation">.</span><span class="token constant">SELECTOR</span><span class="token punctuation">,</span> selectorData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">updateRuleTrieCache</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">RuleData</span> ruleData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ruleMatchCacheConfig<span class="token punctuation">.</span><span class="token function">getTrie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">.</span><span class="token function">getBeforeConditionDataList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TrieEvent</span><span class="token punctuation">(</span><span class="token class-name">TrieEventEnum</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">,</span> <span class="token class-name">TrieCacheTypeEnum</span><span class="token punctuation">.</span><span class="token constant">RULE</span><span class="token punctuation">,</span> ruleData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// if rule data has before condition, update trie</span>
                eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TrieEvent</span><span class="token punctuation">(</span><span class="token class-name">TrieEventEnum</span><span class="token punctuation">.</span><span class="token constant">UPDATE</span><span class="token punctuation">,</span> <span class="token class-name">TrieCacheTypeEnum</span><span class="token punctuation">.</span><span class="token constant">RULE</span><span class="token punctuation">,</span> ruleData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TrieEvent</span><span class="token punctuation">(</span><span class="token class-name">TrieEventEnum</span><span class="token punctuation">.</span><span class="token constant">REMOVE</span><span class="token punctuation">,</span> <span class="token class-name">TrieCacheTypeEnum</span><span class="token punctuation">.</span><span class="token constant">RULE</span><span class="token punctuation">,</span> ruleData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShenyuTrieListener</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TrieEvent</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">TrieEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 省略部分代码</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>filterConditions<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> uriPaths <span class="token operator">=</span> filterConditions<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">ConditionData</span><span class="token operator">::</span><span class="token function">getParamValue</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>eventEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">case</span> <span class="token constant">INSERT</span><span class="token operator">:</span>
                    <span class="token function">insertTrieNode</span><span class="token punctuation">(</span>uriPaths<span class="token punctuation">,</span> source<span class="token punctuation">,</span> cacheTypeEnum<span class="token punctuation">,</span> shenyuTrie<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token constant">UPDATE</span><span class="token operator">:</span>
                    <span class="token function">updateTrieNode</span><span class="token punctuation">(</span>uriPaths<span class="token punctuation">,</span> source<span class="token punctuation">,</span> cacheTypeEnum<span class="token punctuation">,</span> shenyuTrie<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token constant">REMOVE</span><span class="token operator">:</span>
                    <span class="token function">removeTrieNode</span><span class="token punctuation">(</span>uriPaths<span class="token punctuation">,</span> source<span class="token punctuation">,</span> cacheTypeEnum<span class="token punctuation">,</span> shenyuTrie<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">default</span><span class="token operator">:</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Unexpected value: &quot;</span> <span class="token operator">+</span> event<span class="token punctuation">.</span><span class="token function">getTrieEventEnum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-何时匹配数据" tabindex="-1"><a class="header-anchor" href="#_4-3-何时匹配数据" aria-hidden="true">#</a> 4.3 何时匹配数据</h3><p>在开启二级缓存(Trie缓存)缓存的前提下，只有继承了<code>org.apache.shenyu.plugin.base.AbstractShenyuPlugin</code>类的插件才会访二级缓存(前缀树缓存)。</p><p>shenyu前缀树的匹配逻辑大致如下(此处以RuleTrie说明)：</p><ul><li><p>1.先从keyRootMap中通过selectorId获取到对应的ShenyuTrieNode，如果没有则返回null。</p></li><li><p>2.通过path以<code>/</code>进行划分，从第一个节点在trieNode的children中进行访问，如果存在则继续访问，如果不存在则返回null，</p></li><li><p>3.如果在访问过程中，存在冲突节点，则通过AC自动机构建的失配节点继续访问，知道找到对应的有效节点，如果访问root节点还找不到，则说明无法匹配。</p></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractShenyuPlugin</span> <span class="token keyword">implements</span> <span class="token class-name">ShenyuPlugin</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">RuleData</span> <span class="token function">trieMatchRule</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">SelectorData</span> selectorData<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ruleMatchConfig<span class="token punctuation">.</span><span class="token function">getTrie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">RuleData</span> ruleData <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ShenyuTrieNode</span> shenyuTrieNode <span class="token operator">=</span> ruleTrie<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> selectorData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">nonNull</span><span class="token punctuation">(</span>shenyuTrieNode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">LogUtils</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token constant">LOG</span><span class="token punctuation">,</span> <span class="token string">&quot;{} rule match path from shenyu trie&quot;</span><span class="token punctuation">,</span> <span class="token function">named</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> shenyuTrieNode<span class="token punctuation">.</span><span class="token function">getPathCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>collection<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">,</span> <span class="token class-name">RuleData</span><span class="token punctuation">&gt;</span></span> ruleDataPair<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>collection<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    ruleDataPair <span class="token operator">=</span> <span class="token function">matchRule</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span> <span class="token class-name">ListUtil</span><span class="token punctuation">.</span><span class="token function">castList</span><span class="token punctuation">(</span>collection<span class="token punctuation">,</span> <span class="token class-name">RuleData</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token operator">::</span><span class="token function">cast</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Object</span> ruleObj <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">RuleData</span> rule <span class="token operator">=</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">nonNull</span><span class="token punctuation">(</span>ruleObj<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token class-name">RuleData</span><span class="token punctuation">)</span> ruleObj <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token keyword">boolean</span> cached <span class="token operator">=</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">nonNull</span><span class="token punctuation">(</span>rule<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> rule<span class="token punctuation">.</span><span class="token function">getConditionDataList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">allMatch</span><span class="token punctuation">(</span>condition <span class="token operator">-&gt;</span> <span class="token constant">URI_CONDITION_TYPE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>condition<span class="token punctuation">.</span><span class="token function">getParamType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    ruleDataPair <span class="token operator">=</span> <span class="token class-name">Pair</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>cached<span class="token punctuation">,</span> rule<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                ruleData <span class="token operator">=</span> ruleDataPair<span class="token punctuation">.</span><span class="token function">getRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ruleDataPair<span class="token punctuation">.</span><span class="token function">getLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">nonNull</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// exist only one rule data, cache rule</span>
                    <span class="token function">cacheRuleData</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> ruleData<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> ruleData<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-何时删除数据" tabindex="-1"><a class="header-anchor" href="#_4-4-何时删除数据" aria-hidden="true">#</a> 4.4 何时删除数据</h3><p>shenyu删除前缀树主要有两种方案</p><ul><li>当禁用当前选择器或者规则时，会将前缀树的缓存的selector或者rule根据uri进行删除，该过程发生在更新选择器或者规则的时候。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonPluginDataSubscriber</span> <span class="token keyword">implements</span> <span class="token class-name">PluginDataSubscriber</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">updateCacheData</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token keyword">final</span> <span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">.</span><span class="token function">getBeforeConditionDataList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TrieEvent</span><span class="token punctuation">(</span><span class="token class-name">TrieEventEnum</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">,</span> <span class="token class-name">TrieCacheTypeEnum</span><span class="token punctuation">.</span><span class="token constant">RULE</span><span class="token punctuation">,</span> ruleData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// if rule data has before condition, update trie</span>
                    eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TrieEvent</span><span class="token punctuation">(</span><span class="token class-name">TrieEventEnum</span><span class="token punctuation">.</span><span class="token constant">UPDATE</span><span class="token punctuation">,</span> <span class="token class-name">TrieCacheTypeEnum</span><span class="token punctuation">.</span><span class="token constant">RULE</span><span class="token punctuation">,</span> ruleData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 如果是禁用选择器或者规则就删除前缀树中的缓存</span>
                eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TrieEvent</span><span class="token punctuation">(</span><span class="token class-name">TrieEventEnum</span><span class="token punctuation">.</span><span class="token constant">REMOVE</span><span class="token punctuation">,</span> <span class="token class-name">TrieCacheTypeEnum</span><span class="token punctuation">.</span><span class="token constant">RULE</span><span class="token punctuation">,</span> ruleData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>当删除当前选择器或者规则时，会将前缀树的缓存的selector或者rule进行删除。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonPluginDataSubscriber</span> <span class="token keyword">implements</span> <span class="token class-name">PluginDataSubscriber</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">removeCacheData</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token keyword">final</span> <span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">PluginData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">SelectorData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// remove selector trie cache</span>
            <span class="token comment">// 删除selector trie中的缓存</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>selectorMatchConfig<span class="token punctuation">.</span><span class="token function">getTrie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TrieEvent</span><span class="token punctuation">(</span><span class="token class-name">TrieEventEnum</span><span class="token punctuation">.</span><span class="token constant">REMOVE</span><span class="token punctuation">,</span> <span class="token class-name">TrieCacheTypeEnum</span><span class="token punctuation">.</span><span class="token constant">SELECTOR</span><span class="token punctuation">,</span> selectorData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">RuleData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 删除rule trie中的缓存</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ruleMatchCacheConfig<span class="token punctuation">.</span><span class="token function">getTrie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                eventPublisher<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TrieEvent</span><span class="token punctuation">(</span><span class="token class-name">TrieEventEnum</span><span class="token punctuation">.</span><span class="token constant">REMOVE</span><span class="token punctuation">,</span> <span class="token class-name">TrieCacheTypeEnum</span><span class="token punctuation">.</span><span class="token constant">RULE</span><span class="token punctuation">,</span> ruleData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5-何时使用二级缓存" tabindex="-1"><a class="header-anchor" href="#_4-5-何时使用二级缓存" aria-hidden="true">#</a> 4.5 何时使用二级缓存</h3><ul><li>shenyu二级缓存只有在selector/rule的condition中有uri类型的参数时才会缓存到trie中，如果没有uri类型的参数，则不会使用二级缓存。</li><li>尽可能在同一个selector中不要设置多个相同uri的规则，多个相同的uri会导致前缀会执行默认的筛选条件，这样会导致性能的损耗。</li><li>尽可能少使用含通配符<code>*</code>,<code>**</code>的uri，这样会导致前缀树的匹配性能损耗。</li></ul><h2 id="_5-三级缓存匹配" tabindex="-1"><a class="header-anchor" href="#_5-三级缓存匹配" aria-hidden="true">#</a> 5.三级缓存匹配</h2><p>该缓存是shenyu默认的匹配缓存，selector和rule都是基于ConcurrentHashMap实现的缓存，其主要的数据结构如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * pluginName -&gt; SelectorData.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">SelectorData</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token constant">SELECTOR_MAP</span> <span class="token operator">=</span> <span class="token class-name">Maps</span><span class="token punctuation">.</span><span class="token function">newConcurrentMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * selectorId -&gt; RuleData.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">RuleData</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token constant">RULE_MAP</span> <span class="token operator">=</span> <span class="token class-name">Maps</span><span class="token punctuation">.</span><span class="token function">newConcurrentMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中SELECTOR_MAP中key是pluginName，value是对应插件的选择器的集合。RULE_MAP中的key是selectorId，value是对应选择器的规则集合。</p><h3 id="_5-1-何时存入数据" tabindex="-1"><a class="header-anchor" href="#_5-1-何时存入数据" aria-hidden="true">#</a> 5.1 何时存入数据</h3><p>shenyu默认的缓存是在网关启动后，通过数据同步或者本地模式添加数据将所有的选择器和规则都存入缓存中。并且在每次更新selector或者rule的时候都会更新对应的selector或者rule数据。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonPluginDataSubscriber</span> <span class="token keyword">implements</span> <span class="token class-name">PluginDataSubscriber</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">updateCacheData</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token keyword">final</span> <span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">PluginData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">PluginData</span> pluginData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">PluginData</span><span class="token punctuation">)</span> data<span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">PluginData</span> oldPluginData <span class="token operator">=</span> <span class="token class-name">BaseDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">obtainPluginData</span><span class="token punctuation">(</span>pluginData<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">BaseDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cachePluginData</span><span class="token punctuation">(</span>pluginData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>handlerMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>pluginData<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>handler <span class="token operator">-&gt;</span> handler<span class="token punctuation">.</span><span class="token function">handlerPlugin</span><span class="token punctuation">(</span>pluginData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">SelectorData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">SelectorData</span> selectorData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SelectorData</span><span class="token punctuation">)</span> data<span class="token punctuation">;</span>
            <span class="token class-name">BaseDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cacheSelectData</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>handlerMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">.</span><span class="token function">getPluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>handler <span class="token operator">-&gt;</span> handler<span class="token punctuation">.</span><span class="token function">handlerSelector</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">RuleData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">RuleData</span> ruleData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RuleData</span><span class="token punctuation">)</span> data<span class="token punctuation">;</span>
            <span class="token class-name">BaseDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cacheRuleData</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>handlerMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">.</span><span class="token function">getPluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>handler <span class="token operator">-&gt;</span> handler<span class="token punctuation">.</span><span class="token function">handlerRule</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-何时匹配数据" tabindex="-1"><a class="header-anchor" href="#_5-2-何时匹配数据" aria-hidden="true">#</a> 5.2 何时匹配数据</h3><ul><li>1.在一级缓存以及二级未匹配到数据的时候，会使用默认缓存进行匹配</li><li>2.在一级、二级缓存未开启的时候，会使用默认缓存进行匹配。</li></ul><p>shenyu的默认缓存匹配是通过spi实现的匹配，会从rule中获取rule condition，然后根据condition的type进行匹配。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractShenyuPlugin</span> <span class="token keyword">implements</span> <span class="token class-name">ShenyuPlugin</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">ShenyuPluginChain</span> chain<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectorData</span><span class="token punctuation">&gt;</span></span> selectors <span class="token operator">=</span> <span class="token class-name">BaseDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">obtainSelectorData</span><span class="token punctuation">(</span>pluginName<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RuleData</span><span class="token punctuation">&gt;</span></span> rules <span class="token operator">=</span> <span class="token class-name">BaseDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">obtainRuleData</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> <span class="token function">filterRule</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">RuleData</span> ruleData<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> ruleData<span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">MatchStrategyFactory</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">.</span><span class="token function">getMatchMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ruleData<span class="token punctuation">.</span><span class="token function">getConditionDataList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-何时删除数据" tabindex="-1"><a class="header-anchor" href="#_5-3-何时删除数据" aria-hidden="true">#</a> 5.3 何时删除数据</h3><p>当在shenyu-admin或者本地模式通过接口删除选择器或规则时，shenyu将会从默认缓存中删除选择器和规则的数据。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonPluginDataSubscriber</span> <span class="token keyword">implements</span> <span class="token class-name">PluginDataSubscriber</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">removeCacheData</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token keyword">final</span> <span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">PluginData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">SelectorData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">SelectorData</span> selectorData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SelectorData</span><span class="token punctuation">)</span> data<span class="token punctuation">;</span>
            <span class="token class-name">BaseDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeSelectData</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>handlerMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">.</span><span class="token function">getPluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>handler <span class="token operator">-&gt;</span> handler<span class="token punctuation">.</span><span class="token function">removeSelector</span><span class="token punctuation">(</span>selectorData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">RuleData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">RuleData</span> ruleData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RuleData</span><span class="token punctuation">)</span> data<span class="token punctuation">;</span>
            <span class="token class-name">BaseDataCache</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeRuleData</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>handlerMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">.</span><span class="token function">getPluginName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>handler <span class="token operator">-&gt;</span> handler<span class="token punctuation">.</span><span class="token function">removeRule</span><span class="token punctuation">(</span>ruleData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,67),c=[e];function o(l,u){return s(),a("div",null,c)}const k=n(p,[["render",o],["__file","ApacheShenYu-cache-design.html.vue"]]);export{k as default};
