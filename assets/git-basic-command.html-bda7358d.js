import{_ as g,W as d,X as l,Z as i,$ as t,a0 as e,a2 as n,a1 as o,C as s}from"./framework-b468b75a.js";const c={},r=o(`<h1 id="git基本命令" tabindex="-1"><a class="header-anchor" href="#git基本命令" aria-hidden="true">#</a> git基本命令</h1><p>0.你必须安装了git才能继续往下看。 1.新建一个目录(在你磁盘空闲较多的地方，新建一个目录(名称Repository))===&gt;这个Repository就是上面说的你的本地仓库，然后右键选择Git Bash(Git 命令行)，在目录下输入以下命令：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>git config <span class="token punctuation">-</span><span class="token punctuation">-</span>global user.name &quot;username&quot;

git config <span class="token punctuation">-</span><span class="token punctuation">-</span>global user.email &quot;youremail&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),u=o('<h2 id="git-init" tabindex="-1"><a class="header-anchor" href="#git-init" aria-hidden="true">#</a> git init</h2><figure><img src="https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/git_init.png" alt="git_init" tabindex="0" loading="lazy"><figcaption>git_init</figcaption></figure><p>此时，你就创建了一个本地仓库了。可以在你的本地查看一下：</p><figure><img src="https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/git_intit2.png" alt="git" tabindex="0" loading="lazy"><figcaption>git</figcaption></figure><h2 id="git-add-把项目提交到git仓库" tabindex="-1"><a class="header-anchor" href="#git-add-把项目提交到git仓库" aria-hidden="true">#</a> git add （把项目提交到git仓库）</h2><p>新建一个demo.txt的文件，并且在里面写入123456789</p><figure><img src="https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/git_add.png" alt="git_add" tabindex="0" loading="lazy"><figcaption>git_add</figcaption></figure><p>这样就说明你已经把文件提交到文件暂存区了，接下来使用下一个命令你就可以在本地仓库看到了。</p><h2 id="git-commit" tabindex="-1"><a class="header-anchor" href="#git-commit" aria-hidden="true">#</a> git commit</h2><figure><img src="https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/git_commit.png" alt="git_commit" tabindex="0" loading="lazy"><figcaption>git_commit</figcaption></figure>',10),h=i("h2",{id:"git-status-查看状态",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#git-status-查看状态","aria-hidden":"true"},"#"),t(" git status ---查看状态")],-1),p=i("figure",null,[i("img",{src:"https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/git_status.png",alt:"git_status",tabindex:"0",loading:"lazy"}),i("figcaption",null,"git_status")],-1),m=o('<figure><img src="https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/git_status_1.png" alt="git_status2" tabindex="0" loading="lazy"><figcaption>git_status2</figcaption></figure><blockquote><p>修改之后就已经有了文件修改的信息，并且git提示你需要commit！所以你需要使用上面的git commit 提交！</p></blockquote><h2 id="git-diff" tabindex="-1"><a class="header-anchor" href="#git-diff" aria-hidden="true">#</a> git diff</h2><figure><img src="https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/git_diff.png" alt="git_diff" tabindex="0" loading="lazy"><figcaption>git_diff</figcaption></figure><blockquote><p>git diff就是比对文件，红色的是告诉你，那是原来的，绿色的就是告诉添加了信息。</p></blockquote><blockquote><p>之后你就可以放心的提交你的版本了。</p></blockquote><p><strong>你需要执行git add， git commit -m &quot;xxxx&quot;</strong>，必须通过add提交到文件暂存区。</p><figure><img src="https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/git_add_commit.png" alt="git_add_commit1" tabindex="0" loading="lazy"><figcaption>git_add_commit1</figcaption></figure><h1 id="版本控制-回退" tabindex="-1"><a class="header-anchor" href="#版本控制-回退" aria-hidden="true">#</a> 版本控制---回退</h1><h2 id="git-log" tabindex="-1"><a class="header-anchor" href="#git-log" aria-hidden="true">#</a> git log</h2><p>在使用git的时候一定要会使用日志功能。</p>',11),f=o(`<figure><img src="https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/git_add_commit2.png" alt="git_diff_add_commit" tabindex="0" loading="lazy"><figcaption>git_diff_add_commit</figcaption></figure><p>接下来使用git log打印日志</p><figure><img src="https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/git_log.png" alt="git_log" tabindex="0" loading="lazy"><figcaption>git_log</figcaption></figure><h2 id="版本回滚-git-reset-hard-head" tabindex="-1"><a class="header-anchor" href="#版本回滚-git-reset-hard-head" aria-hidden="true">#</a> 版本回滚---git reset --hard HEAD^</h2><p>上面提到使用git log打印所有版本，其实有更简单的办法。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git log --pretty=oneline
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),_=o(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git reset --hard HEAD^
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/git_hard.png" alt="git_hard" tabindex="0" loading="lazy"><figcaption>git_hard</figcaption></figure><blockquote><p>现在可以打开你的demo.txt看看里面还有什么内容了。是不是少了最后添加的一行数据，只有一行数据了。回滚到添加0000的版本了。</p></blockquote><p><strong>超级回滚：</strong></p><p>你需要回滚50个版本，总不能输入50个^号，所以有下面这种更简单的办法。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git reset --hard HEAD~50
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="cat命令" tabindex="-1"><a class="header-anchor" href="#cat命令" aria-hidden="true">#</a> cat命令</h2><p>使用cat查看内容。</p><figure><img src="https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/cat.png" alt="cat" tabindex="0" loading="lazy"><figcaption>cat</figcaption></figure><p>然后你可以使用git log 查看一下存在的版本</p><figure><img src="https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/git_log3.png" alt="git_log3" tabindex="0" loading="lazy"><figcaption>git_log3</figcaption></figure>`,11),b=i("h2",{id:"git-reflog",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#git-reflog","aria-hidden":"true"},"#"),t(" git reflog")],-1),x=i("blockquote",null,[i("p",null,"这个命令是告诉你所有操作的版本信息")],-1),v=i("figure",null,[i("img",{src:"https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/git_reflog.png",alt:"git_reflog",tabindex:"0",loading:"lazy"}),i("figcaption",null,"git_reflog")],-1),y=o(`<h2 id="git-reset-hard-版本号" tabindex="-1"><a class="header-anchor" href="#git-reset-hard-版本号" aria-hidden="true">#</a> git reset --hard 版本号</h2><p>下面是回滚到我的版本</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git reset --hard a0ca311
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://finen-1251602255.cos.ap-shanghai.myqcloud.com/images/blog/git_hard.png" alt="git_hard" tabindex="0" loading="lazy"><figcaption>git_hard</figcaption></figure>`,4),q=i("p",null,"或者你可以使用以下命令",-1),k=i("div",{class:"language-text line-numbers-mode","data-ext":"text"},[i("pre",{class:"language-text"},[i("code",null,`cat demo.txt
`)]),i("div",{class:"line-numbers","aria-hidden":"true"},[i("div",{class:"line-number"})])],-1),z=i("hr",null,null,-1),B=i("pre",null,[i("code",null,` 下面会涉及删除与撤销的操作!请继续浏览！
`)],-1),C=i("hr",null,null,-1);function E(N,V){const a=s("font");return d(),l("div",null,[r,i("blockquote",null,[i("p",null,[t("这里的"),e(a,{color:"red"},{default:n(()=>[t("username")]),_:1}),t("就是你刚刚注册的用户名，"),e(a,{color:"red"},{default:n(()=>[t("email")]),_:1}),t("就是刚刚注册邮箱。")])]),u,i("blockquote",null,[i("p",null,[t("这里的"),e(a,{color:"red"},{default:n(()=>[t(" -m")]),_:1}),t("就是你提交的注释，记得以后写一定要使用注释！这是一个好习惯！")])]),h,p,i("blockquote",null,[i("p",null,[t("没有什么东西需要提交，别急，我们在刚刚的demo.txt中"),e(a,{color:"red"},{default:n(()=>[t("追加一个0000")]),_:1}),t(",记得保存文件。")])]),m,i("p",null,[t("首先我们在demo.txt中添加一行数据"),e(a,{color:"red"},{default:n(()=>[t("0000123456789")]),_:1}),t(",然后git add ，git commit.")]),f,i("p",null,[t("这个可以自己去尝试哟，这个只会提示你的"),e(a,{color:"red"},{default:n(()=>[t("版本号")]),_:1}),t("跟"),e(a,{color:"red"},{default:n(()=>[t("提交的信息")]),_:1}),t("。")]),_,i("p",null,[t("加入你要回滚到添加了"),e(a,{color:"red"},{default:n(()=>[t("0000123456789")]),_:1}),t("的版本该怎么办呢？使用下一个命令+下下个命令！！！")]),b,x,v,i("p",null,[t("看到版本号了---a0ca311，接下来就可以使用这个版本号进行回滚到添加"),e(a,{color:"red"},{default:n(()=>[t("0000123456789")]),_:1}),t("的那个版本了。")]),y,i("p",null,[t("接下来，打开你的demo.txt文档看一下是否已经有"),e(a,{color:"red"},{default:n(()=>[t("0000123456789")]),_:1}),t("了。")]),q,k,z,B,C])}const D=g(c,[["render",E],["__file","git-basic-command.html.vue"]]);export{D as default};
