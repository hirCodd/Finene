(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{541:function(t,a,e){"use strict";e.r(a);var s=e(1),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"集合关系图谱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集合关系图谱"}},[t._v("#")]),t._v(" 集合关系图谱")]),t._v(" "),e("blockquote",[e("p",[t._v("Java集合框架包括Collection和Map，Collection主要用于存储对象，Map主要用用于存储键值对数据。\n"),e("img",{attrs:{src:"https://gitee.com/forge-logic/images-lib/raw/master/img/Java-collection-cheat-sheet.PNG",alt:"Java-Collection"}})])]),t._v(" "),e("h2",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),e("p",[t._v("容器，就是可以容纳其他Java对象的对象。*Java Collections Framework(JCF)*为Java开发者提供了通用的容器，其始于JDK 1.2，优点是:")]),t._v(" "),e("ul",[e("li",[t._v("降低编程难度")]),t._v(" "),e("li",[t._v("提高程序性能")]),t._v(" "),e("li",[t._v("提高API间的互操作性")]),t._v(" "),e("li",[t._v("降低学习难度")]),t._v(" "),e("li",[t._v("降低设计和实现相关API的难度")]),t._v(" "),e("li",[t._v("增加程序的重用性\nJava容器里只能放对象，对于基本类型(int, long, float, double等)，需要将其包装成对象类型后(Integer, Long, Float, Double等)才能放到容器里。很多时候拆包装和解包装能够自动完成。这虽然会导致额外的性能和空间开销，但简化了设计和编程。")])]),t._v(" "),e("h2",{attrs:{id:"collection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#collection"}},[t._v("#")]),t._v(" Collection")]),t._v(" "),e("h3",{attrs:{id:"list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[t._v("#")]),t._v(" List")]),t._v(" "),e("h4",{attrs:{id:"arraylist简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arraylist简介"}},[t._v("#")]),t._v(" ArrayList简介")]),t._v(" "),e("p",[t._v("ArrayList继承自"),e("code",[t._v("AbstractList")]),t._v("，实现了 List 接口。底层基于数组实现容量大小动态变化。允许 null 的存在。同时还实现了"),e("code",[t._v("RandomAccess")]),t._v("、"),e("code",[t._v("Cloneable")]),t._v("、"),e("code",[t._v("Serializable")]),t._v(" 接口，所以ArrayList 是支持快速访问、复制、序列化的。基于动态数组实现，支持随机访问。")]),t._v(" "),e("h4",{attrs:{id:"linkedlist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist"}},[t._v("#")]),t._v(" LinkedList")]),t._v(" "),e("h3",{attrs:{id:"set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),e("h4",{attrs:{id:"hashset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hashset"}},[t._v("#")]),t._v(" Hashset")]),t._v(" "),e("h4",{attrs:{id:"linkedhashset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linkedhashset"}},[t._v("#")]),t._v(" LinkedHashSet")]),t._v(" "),e("h3",{attrs:{id:"queue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#queue"}},[t._v("#")]),t._v(" Queue")]),t._v(" "),e("h4",{attrs:{id:"deque"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deque"}},[t._v("#")]),t._v(" Deque")]),t._v(" "),e("h4",{attrs:{id:"arraydeque"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arraydeque"}},[t._v("#")]),t._v(" ArrayDeque")])])}),[],!1,null,null,null);a.default=r.exports},542:function(t,a,e){"use strict";e.r(a);var s=e(1),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"集合关系图谱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集合关系图谱"}},[t._v("#")]),t._v(" 集合关系图谱")]),t._v(" "),e("blockquote",[e("p",[t._v("Java集合框架包括Collection和Map，Collection主要用于存储对象，Map主要用用于存储键值对数据。")])]),t._v(" "),e("h2",{attrs:{id:"collection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#collection"}},[t._v("#")]),t._v(" Collection")]),t._v(" "),e("h3",{attrs:{id:"list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[t._v("#")]),t._v(" List")]),t._v(" "),e("h4",{attrs:{id:"arraylist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arraylist"}},[t._v("#")]),t._v(" ArrayList")]),t._v(" "),e("h4",{attrs:{id:"linkedlist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist"}},[t._v("#")]),t._v(" LinkedList")]),t._v(" "),e("h3",{attrs:{id:"set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),e("h4",{attrs:{id:"hashset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hashset"}},[t._v("#")]),t._v(" Hashset")]),t._v(" "),e("h4",{attrs:{id:"linkedhashset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linkedhashset"}},[t._v("#")]),t._v(" LinkedHashSet")]),t._v(" "),e("h3",{attrs:{id:"queue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#queue"}},[t._v("#")]),t._v(" Queue")]),t._v(" "),e("h4",{attrs:{id:"deque"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deque"}},[t._v("#")]),t._v(" Deque")]),t._v(" "),e("h4",{attrs:{id:"arraydeque"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arraydeque"}},[t._v("#")]),t._v(" ArrayDeque")])])}),[],!1,null,null,null);a.default=r.exports},543:function(t,a,e){"use strict";e.r(a);var s=e(1),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"集合关系图谱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集合关系图谱"}},[t._v("#")]),t._v(" 集合关系图谱")]),t._v(" "),e("blockquote",[e("p",[t._v("Java集合框架包括Collection和Map，Collection主要用于存储对象，Map主要用用于存储键值对数据。\n"),e("img",{attrs:{src:"https://gitee.com/forge-logic/images-lib/raw/master/img/Java-collection-cheat-sheet.PNG",alt:"Java-Collection"}})])]),t._v(" "),e("h2",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),e("p",[t._v("容器，就是可以容纳其他Java对象的对象。*Java Collections Framework(JCF)*为Java开发者提供了通用的容器，其始于JDK 1.2，优点是:")]),t._v(" "),e("ul",[e("li",[t._v("降低编程难度")]),t._v(" "),e("li",[t._v("提高程序性能")]),t._v(" "),e("li",[t._v("提高API间的互操作性")]),t._v(" "),e("li",[t._v("降低学习难度")]),t._v(" "),e("li",[t._v("降低设计和实现相关API的难度")]),t._v(" "),e("li",[t._v("增加程序的重用性\nJava容器里只能放对象，对于基本类型(int, long, float, double等)，需要将其包装成对象类型后(Integer, Long, Float, Double等)才能放到容器里。很多时候拆包装和解包装能够自动完成。这虽然会导致额外的性能和空间开销，但简化了设计和编程。")])]),t._v(" "),e("h2",{attrs:{id:"collection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#collection"}},[t._v("#")]),t._v(" Collection")]),t._v(" "),e("h3",{attrs:{id:"list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[t._v("#")]),t._v(" List")]),t._v(" "),e("h4",{attrs:{id:"arraylist简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arraylist简介"}},[t._v("#")]),t._v(" ArrayList简介")]),t._v(" "),e("p",[t._v("ArrayList继承自"),e("code",[t._v("AbstractList")]),t._v("，实现了"),e("code",[t._v("List")]),t._v("、"),e("code",[t._v("RandomAccess")]),t._v("、"),e("code",[t._v("Cloneable")]),t._v("、"),e("code",[t._v("Serializable")]),t._v("接口。底层基于数组实现容量大小动态变化。允许"),e("code",[t._v("null")]),t._v("的存在。所以ArrayList是支持快速访问、复制、序列化的。基于动态数组实现，支持随机访问。")]),t._v(" "),e("h4",{attrs:{id:"linkedlist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist"}},[t._v("#")]),t._v(" LinkedList")]),t._v(" "),e("p",[t._v("LinkedList继承自"),e("code",[t._v("AbstractSequentialList")]),t._v("，实现了"),e("code",[t._v("List")]),t._v("、"),e("code",[t._v("Deque")]),t._v("、"),e("code",[t._v("Cloneable")]),t._v("、"),e("code",[t._v("Serializable")]),t._v("，LinkedList是基于链表实现的，"),e("code",[t._v("LinkedList")]),t._v("插入和删除方面要优于"),e("code",[t._v("ArrayList")]),t._v(",只能顺序访问。")]),t._v(" "),e("h3",{attrs:{id:"set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),e("h4",{attrs:{id:"hashset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hashset"}},[t._v("#")]),t._v(" Hashset")]),t._v(" "),e("h4",{attrs:{id:"linkedhashset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linkedhashset"}},[t._v("#")]),t._v(" LinkedHashSet")]),t._v(" "),e("h4",{attrs:{id:"treeset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#treeset"}},[t._v("#")]),t._v(" TreeSet")]),t._v(" "),e("h3",{attrs:{id:"queue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#queue"}},[t._v("#")]),t._v(" Queue")]),t._v(" "),e("h4",{attrs:{id:"deque"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deque"}},[t._v("#")]),t._v(" Deque")]),t._v(" "),e("h4",{attrs:{id:"arraydeque"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arraydeque"}},[t._v("#")]),t._v(" ArrayDeque")]),t._v(" "),e("h2",{attrs:{id:"map"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" Map")]),t._v(" "),e("h3",{attrs:{id:"hashmap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hashmap"}},[t._v("#")]),t._v(" HashMap")])])}),[],!1,null,null,null);a.default=r.exports}}]);